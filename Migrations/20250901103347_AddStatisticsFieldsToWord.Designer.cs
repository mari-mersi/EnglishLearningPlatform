// <auto-generated />
using System;
using EnglishLearningPlatform.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EnglishLearningPlatform.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250901103347_AddStatisticsFieldsToWord")]
    partial class AddStatisticsFieldsToWord
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.8");

            modelBuilder.Entity("EnglishLearningPlatform.Models.Word", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("DifficultyLevel")
                        .HasColumnType("INTEGER");

                    b.Property<string>("EnglishWord")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Example")
                        .HasColumnType("TEXT");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsLearned")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("NeedsTranslation")
                        .HasColumnType("INTEGER");

                    b.Property<string>("PartOfSpeech")
                        .HasColumnType("TEXT");

                    b.Property<string>("Transcription")
                        .HasColumnType("TEXT");

                    b.Property<string>("Translation")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Words");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DifficultyLevel = 1,
                            EnglishWord = "Hello",
                            Example = "Hello, how are you?",
                            ImageUrl = "/images/hello.jpg",
                            IsLearned = false,
                            NeedsTranslation = false,
                            PartOfSpeech = "interjection",
                            Transcription = "/həˈloʊ/",
                            Translation = "Привет"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DifficultyLevel = 1,
                            EnglishWord = "World",
                            Example = "The world is beautiful",
                            ImageUrl = "/images/world.jpg",
                            IsLearned = false,
                            NeedsTranslation = false,
                            PartOfSpeech = "noun",
                            Transcription = "/wɜːrld/",
                            Translation = "Мир"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DifficultyLevel = 1,
                            EnglishWord = "Cat",
                            Example = "The cat is sleeping",
                            ImageUrl = "/images/cat.jpg",
                            IsLearned = false,
                            NeedsTranslation = false,
                            PartOfSpeech = "noun",
                            Transcription = "/kæt/",
                            Translation = "Кошка"
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DifficultyLevel = 1,
                            EnglishWord = "Dog",
                            Example = "The dog is barking",
                            ImageUrl = "/images/dog.jpg",
                            IsLearned = false,
                            NeedsTranslation = false,
                            PartOfSpeech = "noun",
                            Transcription = "/dɒɡ/",
                            Translation = "Собака"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
